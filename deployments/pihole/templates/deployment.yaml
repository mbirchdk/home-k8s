apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: pihole
  name: pihole
  namespace: pihole
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: pihole
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pihole
    spec:
      hostNetwork: true
      dnsConfig:
        nameservers:
          - 1.1.1.1
      volumes:
      - name: etc
        hostPath:
          path: /data/pihole/etc
        type: Directory
      - name: dnsmasq
        hostPath:
          path: /data/pihole/dnsmasq.d
        type: Directory
      containers:
      - image: pihole/pihole:stable
        imagePullPolicy: Always
        name: pihole
        env:
        - name: TZ
          value: "America/Los_Angeles"
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              name: pihole-secret
              key: password
        volumeMounts:
        - name: etc
          mountPath: /etc/pihole
        - name: dnsmasq
          mountPath: /etc/dnsmasq.d
        ports:
        - containerPort: 53
          protocol: TCP
        - containerPort: 53
          protocol: UDP
        - containerPort: 67
          protocol: UDP
        - containerPort: 80
          protocol: TCP
        - containerPort: 443
          protocol: TCP
      
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
